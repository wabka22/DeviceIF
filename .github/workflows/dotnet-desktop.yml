name: .NET Build with Code Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-analyze:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup tools
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_BuildTools.exe" -OutFile "$env:RUNNER_TEMP\vs_BuildTools.exe"
        Start-Process -Wait -FilePath "$env:RUNNER_TEMP\vs_BuildTools.exe" -ArgumentList '--quiet', '--norestart', '--add Microsoft.VisualStudio.Workload.MSBuildTools'

    - name: Restore NuGet packages
      run: nuget restore DeviceIF.sln

    - name: Build solution
      run: msbuild DeviceIF.sln /p:Configuration=${{ matrix.configuration }} /p:Platform="Any CPU" /p:WarningLevel=4 /clp:summary

    - name: Run Code Analysis
      shell: pwsh
      continue-on-error: true
      run: |
        dotnet format --verify-no-changes --severity warn --report "code-style-report.json"
        msbuild DeviceIF.sln /p:Configuration=${{ matrix.configuration }} `
          /p:RunAnalyzers=true `
          /p:AnalysisMode=AllEnabledByDefault `
          /p:WarningLevel=4 `
          /p:TreatWarningsAsErrors=false `
          /clp:"summary;errorsonly"
        $analysisResults = Get-Content -Path "**/*CodeAnalysisLog.txt" -ErrorAction SilentlyContinue
        if ($analysisResults) {
          Add-Content -Path "analysis-report.md" -Value "## Code Analysis Results`n`n$analysisResults"
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.configuration }}
        path: |
          bin\${{ matrix.configuration }}
          *.md
          *.json
          **/*CodeAnalysisLog.txt

    - name: Annotate warnings
      if: always()
      shell: pwsh
      run: |
        $warnings = Select-String -Path "**/*.log" -Pattern "warning\s+:" 
        foreach ($warning in $warnings) {
          $file, $line = $warning.Filename, $warning.LineNumber
          $message = $warning.Line -replace ".*warning\s+:", ""
          Write-Output "::warning file=$file,line=$line::$message"
        }
